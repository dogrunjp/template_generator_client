{
  "version": 3,
  "sources": ["../../@exodus/schemasafe/src/known-keywords.js", "../../@exodus/schemasafe/src/pointer.js"],
  "sourcesContent": ["'use strict'\n\nconst knownKeywords = [\n  ...['$schema', '$vocabulary'], // version\n  ...['id', '$id', '$anchor', '$ref', 'definitions', '$defs'], // pointers\n  ...['$recursiveRef', '$recursiveAnchor', '$dynamicAnchor', '$dynamicRef'],\n  ...['type', 'required', 'default'], // generic\n  ...['enum', 'const'], // constant values\n  ...['not', 'allOf', 'anyOf', 'oneOf', 'if', 'then', 'else'], // logical checks\n  ...['maximum', 'minimum', 'exclusiveMaximum', 'exclusiveMinimum', 'multipleOf', 'divisibleBy'], // numbers\n  ...['items', 'maxItems', 'minItems', 'additionalItems', 'prefixItems'], // arrays, basic\n  ...['contains', 'minContains', 'maxContains', 'uniqueItems'], // arrays, complex\n  ...['maxLength', 'minLength', 'format', 'pattern'], // strings\n  ...['contentEncoding', 'contentMediaType', 'contentSchema'], // strings content\n  ...['properties', 'maxProperties', 'minProperties', 'additionalProperties', 'patternProperties'], // objects\n  ...['propertyNames'], // objects\n  ...['dependencies', 'dependentRequired', 'dependentSchemas', 'propertyDependencies'], // objects (dependencies)\n  ...['unevaluatedProperties', 'unevaluatedItems'], // see-through\n  // Unused meta keywords not affecting validation (annotations and comments)\n  // https://json-schema.org/understanding-json-schema/reference/generic.html\n  // https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.9\n  ...['title', 'description', 'deprecated', 'readOnly', 'writeOnly', 'examples', '$comment'], // unused meta\n  ...['example'], // unused meta, OpenAPI\n  'discriminator', // optimization hint and error filtering only, does not affect validation result\n  'removeAdditional', // optional keyword for { removeAdditional: 'keyword' } config, to target specific objects\n]\n\n// Order is important, newer first!\nconst schemaDrafts = [\n  ...['draft/next'], // not recommended to use, might change / break in an unexpected way\n  ...['draft/2020-12', 'draft/2019-09'], // new\n  ...['draft-07', 'draft-06', 'draft-04', 'draft-03'], // historic\n]\nconst schemaVersions = schemaDrafts.map((draft) => `https://json-schema.org/${draft}/schema`)\n\nconst vocab2019 = ['core', 'applicator', 'validation', 'meta-data', 'format', 'content']\nconst vocab2020 = [\n  ...['core', 'applicator', 'unevaluated', 'validation'],\n  ...['meta-data', 'format-annotation', 'format-assertion', 'content'],\n]\nconst knownVocabularies = [\n  ...vocab2019.map((v) => `https://json-schema.org/draft/2019-09/vocab/${v}`),\n  ...vocab2020.map((v) => `https://json-schema.org/draft/2020-12/vocab/${v}`),\n]\n\nmodule.exports = { knownKeywords, schemaVersions, knownVocabularies }\n", "'use strict'\n\nconst { knownKeywords } = require('./known-keywords')\n\nfunction safeSet(map, key, value, comment = 'keys') {\n  if (!map.has(key)) return map.set(key, value)\n  if (map.get(key) !== value) throw new Error(`Conflicting duplicate ${comment}: ${key}`)\n}\n\nfunction untilde(string) {\n  if (!string.includes('~')) return string\n  return string.replace(/~[01]/g, (match) => {\n    switch (match) {\n      case '~1':\n        return '/'\n      case '~0':\n        return '~'\n    }\n    /* c8 ignore next */\n    throw new Error('Unreachable')\n  })\n}\n\nfunction get(obj, pointer, objpath) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object')\n  if (typeof pointer !== 'string') throw new Error('Invalid JSON pointer')\n  const parts = pointer.split('/')\n  if (!['', '#'].includes(parts.shift())) throw new Error('Invalid JSON pointer')\n  if (parts.length === 0) return obj\n\n  let curr = obj\n  for (const part of parts) {\n    if (typeof part !== 'string') throw new Error('Invalid JSON pointer')\n    if (objpath) objpath.push(curr) // does not include target itself, but includes head\n    const prop = untilde(part)\n    if (typeof curr !== 'object') return undefined\n    if (!Object.prototype.hasOwnProperty.call(curr, prop)) return undefined\n    curr = curr[prop]\n  }\n  return curr\n}\n\nconst protocolRegex = /^https?:\\/\\//\n\nfunction joinPath(baseFull, sub) {\n  if (typeof baseFull !== 'string' || typeof sub !== 'string') throw new Error('Unexpected path!')\n  if (sub.length === 0) return baseFull\n  const base = baseFull.replace(/#.*/, '')\n  if (sub.startsWith('#')) return `${base}${sub}`\n  if (!base.includes('/') || protocolRegex.test(sub)) return sub\n  if (protocolRegex.test(base)) return `${new URL(sub, base)}`\n  if (sub.startsWith('/')) return sub\n  return [...base.split('/').slice(0, -1), sub].join('/')\n}\n\nfunction objpath2path(objpath) {\n  const ids = objpath.map((obj) => (obj && (obj.$id || obj.id)) || '')\n  return ids.filter((id) => id && typeof id === 'string').reduce(joinPath, '')\n}\n\nconst withSpecialChilds = ['properties', 'patternProperties', '$defs', 'definitions']\nconst skipChilds = ['const', 'enum', 'examples', 'example', 'comment']\nconst sSkip = Symbol('skip')\n\nfunction traverse(schema, work) {\n  const visit = (sub, specialChilds = false) => {\n    if (!sub || typeof sub !== 'object') return\n    const res = work(sub)\n    if (res !== undefined) return res === sSkip ? undefined : res\n    for (const k of Object.keys(sub)) {\n      if (!specialChilds && !Array.isArray(sub) && !knownKeywords.includes(k)) continue\n      if (!specialChilds && skipChilds.includes(k)) continue\n      const kres = visit(sub[k], !specialChilds && withSpecialChilds.includes(k))\n      if (kres !== undefined) return kres\n    }\n  }\n  return visit(schema)\n}\n\n// Returns a list of resolved entries, in a form: [schema, root, basePath]\n// basePath doesn't contain the target object $id itself\nfunction resolveReference(root, schemas, ref, base = '') {\n  const ptr = joinPath(base, ref)\n  const results = []\n\n  const [main, hash = ''] = ptr.split('#')\n  const local = decodeURI(hash)\n\n  // Find in self by id path\n  const visit = (sub, oldPath, specialChilds = false, dynamic = false) => {\n    if (!sub || typeof sub !== 'object') return\n\n    const id = sub.$id || sub.id\n    let path = oldPath\n    if (id && typeof id === 'string') {\n      path = joinPath(path, id)\n      if (path === ptr || (path === main && local === '')) {\n        results.push([sub, root, oldPath])\n      } else if (path === main && local[0] === '/') {\n        const objpath = []\n        const res = get(sub, local, objpath)\n        if (res !== undefined) results.push([res, root, joinPath(oldPath, objpath2path(objpath))])\n      }\n    }\n    const anchor = dynamic ? sub.$dynamicAnchor : sub.$anchor\n    if (anchor && typeof anchor === 'string') {\n      if (anchor.includes('#')) throw new Error(\"$anchor can't include '#'\")\n      if (anchor.startsWith('/')) throw new Error(\"$anchor can't start with '/'\")\n      path = joinPath(path, `#${anchor}`)\n      if (path === ptr) results.push([sub, root, oldPath])\n    }\n\n    for (const k of Object.keys(sub)) {\n      if (!specialChilds && !Array.isArray(sub) && !knownKeywords.includes(k)) continue\n      if (!specialChilds && skipChilds.includes(k)) continue\n      visit(sub[k], path, !specialChilds && withSpecialChilds.includes(k))\n    }\n    if (!dynamic && sub.$dynamicAnchor) visit(sub, oldPath, specialChilds, true)\n  }\n  visit(root, main)\n\n  // Find in self by pointer\n  if (main === base.replace(/#$/, '') && (local[0] === '/' || local === '')) {\n    const objpath = []\n    const res = get(root, local, objpath)\n    if (res !== undefined) results.push([res, root, objpath2path(objpath)])\n  }\n\n  // Find in additional schemas\n  if (schemas.has(main) && schemas.get(main) !== root) {\n    const additional = resolveReference(schemas.get(main), schemas, `#${hash}`, main)\n    results.push(...additional.map(([res, rRoot, rPath]) => [res, rRoot, joinPath(main, rPath)]))\n  }\n\n  // Full refs to additional schemas\n  if (schemas.has(ptr)) results.push([schemas.get(ptr), schemas.get(ptr), ptr])\n\n  return results\n}\n\nfunction getDynamicAnchors(schema) {\n  const results = new Map()\n  traverse(schema, (sub) => {\n    if (sub !== schema && (sub.$id || sub.id)) return sSkip // base changed, no longer in the same resource\n    const anchor = sub.$dynamicAnchor\n    if (anchor && typeof anchor === 'string') {\n      if (anchor.includes('#')) throw new Error(\"$dynamicAnchor can't include '#'\")\n      if (!/^[a-zA-Z0-9_-]+$/.test(anchor)) throw new Error(`Unsupported $dynamicAnchor: ${anchor}`)\n      safeSet(results, anchor, sub, '$dynamicAnchor')\n    }\n  })\n  return results\n}\n\nconst hasKeywords = (schema, keywords) =>\n  traverse(schema, (s) => Object.keys(s).some((k) => keywords.includes(k)) || undefined) || false\n\nconst addSchemasArrayToMap = (schemas, input, optional = false) => {\n  if (!Array.isArray(input)) throw new Error('Expected an array of schemas')\n  // schema ids are extracted from the schemas themselves\n  for (const schema of input) {\n    traverse(schema, (sub) => {\n      const idRaw = sub.$id || sub.id\n      const id = idRaw && typeof idRaw === 'string' ? idRaw.replace(/#$/, '') : null // # is allowed only as the last symbol here\n      if (id && id.includes('://') && !id.includes('#')) {\n        safeSet(schemas, id, sub, \"schema $id in 'schemas'\")\n      } else if (sub === schema && !optional) {\n        throw new Error(\"Schema with missing or invalid $id in 'schemas'\")\n      }\n    })\n  }\n  return schemas\n}\n\nconst buildSchemas = (input, extra) => {\n  if (extra) return addSchemasArrayToMap(buildSchemas(input), extra, true)\n  if (input) {\n    switch (Object.getPrototypeOf(input)) {\n      case Object.prototype:\n        return new Map(Object.entries(input))\n      case Map.prototype:\n        return new Map(input)\n      case Array.prototype:\n        return addSchemasArrayToMap(new Map(), input)\n    }\n  }\n  throw new Error(\"Unexpected value for 'schemas' option\")\n}\n\nmodule.exports = { get, joinPath, resolveReference, getDynamicAnchors, hasKeywords, buildSchemas }\n"],
  "mappings": "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",
  "names": []
}
